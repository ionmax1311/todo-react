{"version":3,"sources":["components/Tasks.js","components/NewTask.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","btnGroup","display","Task","task","props","classes","ActionButton","done","Tooltip","title","IconButton","aria-label","onClick","doneTask","DeleteButton","deleteTask","EditButton","editTask","ListItem","button","className","listItem","ListItemText","secondary","root","flexGrow","paper","paddingBottom","NewTask","padding","border","borderRadius","justifyContent","flexWrap","box","height","paddingLeft","useState","setTask","Paper","square","Grid","container","xs","TextField","margin","name","required","fullWidth","id","label","autoFocus","value","onChange","e","target","onKeyPress","key","length","addTask","item","Box","alignItems","Button","variant","color","endIcon","Icon","disabled","preventDefault","store","observable","createStyles","spacing","marginTop","header","background","badge","marginLeft","observer","defaultState","tasks","setTasks","activeTasks","filter","React","openModal","setOpenModal","editCurTask","setEditCurTask","curId","setCurId","handleCloseModal","Container","maxWidth","Badge","badgeContent","Dialog","open","onClose","aria-labelledby","DialogContent","type","defaultValue","DialogActions","map","List","list","uuid_v4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3b2a538.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tbtnGroup: {\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n}));\r\n\r\nconst Task = ({ task, ...props }) => {\r\n\tconst classes = useStyles();\r\n\tconst ActionButton = () => (\r\n\t\t<div>\r\n\t\t\t{task.done ? (\r\n\t\t\t\t<Tooltip title='Done'>\r\n\t\t\t\t\t<IconButton aria-label='active'>\r\n\t\t\t\t\t\t<CheckBoxIcon onClick={props.doneTask} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t) : (\r\n\t\t\t\t<Tooltip title='not Done'>\r\n\t\t\t\t\t<IconButton aria-label='active'>\r\n\t\t\t\t\t\t<CheckBoxOutlineBlankIcon onClick={props.doneTask} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst DeleteButton = () => (\r\n\t\t<div>\r\n\t\t\t<Tooltip title='Delete'>\r\n\t\t\t\t<IconButton aria-label='delete' onClick={props.deleteTask}>\r\n\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</Tooltip>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst EditButton = () => (\r\n\t\t<div>\r\n\t\t\t<Tooltip title='Edit'>\r\n\t\t\t\t<IconButton aria-label='edit' onClick={props.editTask}>\r\n\t\t\t\t\t<EditIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</Tooltip>\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ListItem button className={classes.listItem}>\r\n\t\t\t<ListItemText secondary={task.title} />\r\n\r\n\t\t\t<div className={classes.btnGroup}>\r\n\t\t\t\t<DeleteButton />\r\n\t\t\t\t<EditButton />\r\n\t\t\t\t<ActionButton />\r\n\t\t\t</div>\r\n\t\t</ListItem>\r\n\t);\r\n};\r\n\r\nexport default Task;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tpaper: {\r\n\t\tpaddingBottom: 20,\r\n\t},\r\n\tNewTask: {\r\n\t\tpadding: \"0 20px\",\r\n\t\tborder: \"1px solid #ccc\",\r\n\t\tborderRadius: 8,\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tflexWrap: \"nowrap\",\r\n\t},\r\n\tbox: {\r\n\t\theight: \"100%\",\r\n\t\tpaddingLeft: 20,\r\n\t},\r\n}));\r\n\r\nconst NewTask = ({ ...props }) => {\r\n\tconst classes = useStyles();\r\n\tconst [task, setTask] = useState(\"\");\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (task) {\r\n\t\t\tprops.addTask(task);\r\n\t\t}\r\n\t\tsetTask(\"\");\r\n\t};\r\n\r\n\tconst keyPressHandler = (e) => {\r\n\t\tif (e.key === \"Enter\" && task.length) {\r\n\t\t\tprops.addTask(task);\r\n\t\t\tsetTask(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Paper square className={classes.paper}>\r\n\t\t\t<Grid container className={classes.NewTask}>\r\n\t\t\t\t<Grid xs={8}>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t\tname='newTask'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tid='newTask'\r\n\t\t\t\t\t\tlabel='newTask'\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\tvalue={task}\r\n\t\t\t\t\t\tonChange={(e) => setTask(e.target.value)}\r\n\t\t\t\t\t\tonKeyPress={keyPressHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tdisplay='flex'\r\n\t\t\t\t\t\talignItems='center'\r\n\t\t\t\t\t\tclassName={classes.box}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\tendIcon={<Icon>send</Icon>}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisabled={!task.length}\r\n\t\t\t\t\t\t\tonClick={handleSubmit}>\r\n\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n\r\nexport default NewTask;\r\n","import { observable, action, computed } from \"mobx\";\r\n\r\nclass Store {\r\n  @observable defaultState = [\r\n    { id: 0, title: \"React\", done: false },\r\n    { id: 1, title: \"Vue\", done: true },\r\n    { id: 2, title: \"Angular\", done: false },\r\n  ];\r\n}\r\n\r\nconst store = new Store();\r\n\r\nexport default store;\r\n","import React, { useState } from \"react\";\r\nimport Task from \"./components/Tasks\";\r\nimport NewTask from \"./components/NewTask\";\r\n\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport { v4 as uuid_v4 } from \"uuid\";\r\nimport store from \"./store\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n// const defaultState = [\r\n//   { id: 0, title: \"React\", done: false },\r\n//   { id: 1, title: \"Vue\", done: true },\r\n//   { id: 2, title: \"Angular\", done: false },\r\n// ];\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n\tcreateStyles({\r\n\t\troot: {\r\n\t\t\t\"& > *\": {\r\n\t\t\t\tmargin: theme.spacing(1),\r\n\t\t\t},\r\n\t\t},\r\n\t\tcontainer: {\r\n\t\t\tmarginTop: \"50px\",\r\n\t\t},\r\n\t\tpaper: {\r\n\t\t\theight: \"auto\",\r\n\t\t},\r\n\t\theader: {\r\n\t\t\theight: \"70px\",\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\talignItems: \"center\",\r\n\t\t\tpaddingLeft: \"16px\",\r\n\t\t\tbackground: \"#90a4ae\",\r\n\t\t},\r\n\t\tbadge: {\r\n\t\t\tmarginLeft: \"20px\",\r\n\t\t},\r\n\t}),\r\n);\r\n\r\nfunction App() {\r\n\tconst classes = useStyles();\r\n\tconst [tasks, setTasks] = useState(store.defaultState);\r\n\tconst activeTasks = tasks.filter((task) => !task.done);\r\n\tconst [openModal, setOpenModal] = React.useState(false);\r\n\tlet [editCurTask, setEditCurTask] = useState(\"\");\r\n\tlet [curId, setCurId] = useState();\r\n\r\n\tconst doneTask = (id) => {\r\n\t\tsetTasks(\r\n\t\t\ttasks.map((task) =>\r\n\t\t\t\ttask.id === id\r\n\t\t\t\t\t? { id, title: task.title, done: !task.done }\r\n\t\t\t\t\t: task,\r\n\t\t\t),\r\n\t\t);\r\n\t};\r\n\r\n\tconst deleteTask = (id) => {\r\n\t\tsetTasks(tasks.filter((task) => task.id !== id));\r\n\t};\r\n\r\n\tconst editTask = (title, id) => {\r\n\t\tsetOpenModal(true);\r\n\t\tsetEditCurTask(title);\r\n\r\n\t\tsetCurId(id);\r\n\t};\r\n\r\n\tconst handleCloseModal = () => {\r\n\t\tsetOpenModal(false);\r\n\t};\r\n\r\n\tconst handleChangeEditTask = (e) => {\r\n\t\tsetEditCurTask(e.target.value);\r\n\t};\r\n\r\n\tconst sendEditTask = (id) => {\r\n\t\tsetTasks(\r\n\t\t\ttasks.map((task) =>\r\n\t\t\t\ttask.id === curId\r\n\t\t\t\t\t? { id, title: editCurTask, done: task.done }\r\n\t\t\t\t\t: task,\r\n\t\t\t),\r\n\t\t);\r\n\t\tsetOpenModal(false);\r\n\t};\r\n\r\n\tconst addTask = (task, id) => {\r\n\t\tsetTasks([\r\n\t\t\t...tasks,\r\n\t\t\t{\r\n\t\t\t\tid: tasks.length,\r\n\t\t\t\ttitle: task,\r\n\t\t\t\tdone: false,\r\n\t\t\t},\r\n\t\t]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container maxWidth='sm' className={classes.container}>\r\n\t\t\t<Paper square className={classes.paper}>\r\n\t\t\t\t<Paper className={classes.header}>\r\n\t\t\t\t\tActive Tasks:\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tbadgeContent={activeTasks.length}\r\n\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\tclassName={classes.badge}></Badge>\r\n\t\t\t\t</Paper>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\topen={openModal}\r\n\t\t\t\t\t\tonClose={handleCloseModal}\r\n\t\t\t\t\t\taria-labelledby='form-dialog-title'>\r\n\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tmargin='dense'\r\n\t\t\t\t\t\t\t\tid='name'\r\n\t\t\t\t\t\t\t\tlabel='edit message'\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tdefaultValue={editCurTask}\r\n\t\t\t\t\t\t\t\tonChange={handleChangeEditTask}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t<Button onClick={handleCloseModal} color='primary'>\r\n\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsendEditTask();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tcolor='primary'>\r\n\t\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t</Dialog>\r\n\t\t\t\t</div>\r\n\t\t\t\t<List className={classes.list}>\r\n\t\t\t\t\t{tasks.map((task) => (\r\n\t\t\t\t\t\t<Task\r\n\t\t\t\t\t\t\teditTask={() => editTask(task.title, task.id)}\r\n\t\t\t\t\t\t\tdoneTask={() => doneTask(task.id)}\r\n\t\t\t\t\t\t\tdeleteTask={() => deleteTask(task.id)}\r\n\t\t\t\t\t\t\ttask={task}\r\n\t\t\t\t\t\t\tkey={uuid_v4()}></Task>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t</Paper>\r\n\t\t\t<NewTask addTask={addTask}></NewTask>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default observer(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}