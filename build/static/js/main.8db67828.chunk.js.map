{"version":3,"sources":["components/Tasks.js","components/NewTask.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","btnGroup","display","Task","task","props","classes","ActionButton","done","Tooltip","title","IconButton","aria-label","onClick","doneTask","DeleteButton","deleteTask","EditButton","editTask","ListItem","button","className","listItem","ListItemText","secondary","root","flexGrow","paper","paddingBottom","NewTask","padding","border","borderRadius","justifyContent","flexWrap","box","height","paddingLeft","useState","setTask","handleSubmit","addTask","console","log","Paper","square","onSubmit","Grid","container","xs","TextField","margin","name","required","fullWidth","id","label","autoFocus","value","onChange","e","target","item","Box","alignItems","Button","variant","color","endIcon","Icon","disabled","length","store","observable","createStyles","spacing","header","background","badge","marginLeft","observer","defaultState","tasks","setTasks","activeTasks","filter","React","openModal","setOpenModal","editCurTask","setEditCurTask","curId","setCurId","handleCloseModal","Container","maxWidth","uuid_v4","Badge","badgeContent","Dialog","open","onClose","aria-labelledby","DialogContent","type","defaultValue","DialogActions","map","List","list","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUAiBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,SAAU,CACRC,QAAS,YA0DEC,EAtDF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAASC,EAAY,wBAC7BC,EAAUR,IAEVS,EAAe,kBACnB,8BACGH,EAAKI,KACJ,cAACC,EAAA,EAAD,CAASC,MAAM,OAAf,SACE,cAACC,EAAA,EAAD,CAAYC,aAAW,SAAvB,SACE,cAAC,IAAD,CAAcC,QAASR,EAAMS,eAIjC,cAACL,EAAA,EAAD,CAASC,MAAM,WAAf,SACE,cAACC,EAAA,EAAD,CAAYC,aAAW,SAAvB,SACE,cAAC,IAAD,CAA0BC,QAASR,EAAMS,kBAO7CC,EAAe,kBACnB,8BACE,cAACN,EAAA,EAAD,CAASC,MAAM,SAAf,SACE,cAACC,EAAA,EAAD,CAAYC,aAAW,SAASC,QAASR,EAAMW,WAA/C,SACE,cAAC,IAAD,WAMFC,EAAa,kBACjB,8BACE,cAACR,EAAA,EAAD,CAASC,MAAM,OAAf,SACE,cAACC,EAAA,EAAD,CAAYC,aAAW,OAAOC,QAASR,EAAMa,SAA7C,SACE,cAAC,IAAD,WAMR,OACE,eAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWf,EAAQgB,SAApC,UACE,cAACC,EAAA,EAAD,CAAcC,UAAWpB,EAAKM,QAE9B,sBAAKW,UAAWf,EAAQL,SAAxB,UACE,cAACc,EAAD,IACA,cAACE,EAAD,IACA,cAACV,EAAD,W,sDC3DFT,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyB,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,cAAe,IAEjBC,QAAS,CACPC,QAAS,SACTC,OAAQ,iBACRC,aAAc,EACdC,eAAgB,gBAChBC,SAAU,UAEZC,IAAK,CACHC,OAAQ,OACRC,YAAa,QA0DFR,EAtDC,SAAC,GAAkB,IAAbxB,EAAY,oBAC1BC,EAAUR,IAChB,EAAwBwC,mBAAS,IAAjC,mBAAOlC,EAAP,KAAamC,EAAb,KAEMC,EAAe,WACfpC,GACFC,EAAMoC,QAAQrC,GAEhBsC,QAAQC,IAAI,eAAgBvC,GAC5BmC,EAAQ,KAGV,OACE,cAACK,EAAA,EAAD,CAAOC,QAAM,EAACxB,UAAWf,EAAQqB,MAAjC,SACE,sBAAMmB,SAAUN,EAAhB,SACE,eAACO,EAAA,EAAD,CACEC,WAAS,EAGT3B,UAAWf,EAAQuB,QAJrB,UAME,cAACkB,EAAA,EAAD,CAAME,GAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,OAAO,SACPC,KAAK,UACLC,UAAQ,EACRC,WAAS,EACTC,GAAG,UACHC,MAAM,UACNC,WAAS,EACTC,MAAOtD,EACPuD,SAAU,SAACC,GAAD,OAAOrB,EAAQqB,EAAEC,OAAOH,YAGtC,cAACX,EAAA,EAAD,CAAMe,MAAI,EAACb,GAAI,EAAf,SACE,cAACc,EAAA,EAAD,CAAK7D,QAAQ,OAAO8D,WAAW,SAAS3C,UAAWf,EAAQ6B,IAA3D,SACE,cAAC8B,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,QAAS,cAACC,EAAA,EAAD,mBACTf,WAAS,EACTgB,UAAWlE,EAAKmE,OAChB1D,QAAS2B,EANX,8B,+GCxDCgC,EAFD,I,sHAPXC,K,wEAA0B,CACzB,CAAElB,GAAI,EAAG7C,MAAO,QAASF,MAAM,GAC/B,CAAE+C,GAAI,EAAG7C,MAAO,MAAOF,MAAM,GAC7B,CAAE+C,GAAI,EAAG7C,MAAO,UAAWF,MAAM,O,WCsB/BV,EAAYC,aAAW,SAACC,GAAD,OAC3B0E,YAAa,CACXjD,KAAM,CACJ,QAAS,CACP0B,OAAQnD,EAAM2E,QAAQ,KAG1BhD,MAAO,CAGLS,OAAQ,QAEVwC,OAAQ,CACNxC,OAAQ,OACRlC,QAAS,OACT8D,WAAY,SACZ3B,YAAa,OACbwC,WAAY,WAEdC,MAAO,CACLC,WAAY,aAmIHC,mBA9Hf,WACE,IAAM1E,EAAUR,IAChB,EAA0BwC,mBAASkC,EAAMS,cAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAcF,EAAMG,QAAO,SAACjF,GAAD,OAAWA,EAAKI,QAEjD,GADkB0E,EAAMG,QAAO,SAACjF,GAAD,OAAUA,EAAKI,QACZ8E,IAAMhD,UAAS,IAAjD,mBAAOiD,EAAP,KAAkBC,EAAlB,KACA,EAAoClD,mBAAS,IAA7C,mBAAKmD,EAAL,KAAkBC,EAAlB,KACA,EAAwBpD,qBAAxB,mBAAKqD,EAAL,KAAYC,EAAZ,KAqBMC,EAAmB,WACvBL,GAAa,IAkCf,OACE,eAACM,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,eAACnD,EAAA,EAAD,CAAOC,QAAM,EAACxB,UAAWf,EAAQqB,MAAjC,UACE,eAACiB,EAAA,EAAD,CAAOvB,UAAWf,EAAQsE,OAA1B,UACGlC,QAAQC,IAAI,QAAS6B,EAAMS,cAC3BvC,QAAQC,IAAI,YAAaqD,eAF5B,gBAIE,cAACC,EAAA,EAAD,CACEC,aAAcd,EAAYb,OAC1BJ,MAAM,UACN9C,UAAWf,EAAQwE,WAGvB,8BACE,eAACqB,EAAA,EAAD,CACEC,KAAMb,EACNc,QAASR,EACTS,kBAAgB,oBAHlB,UAKE,cAACC,EAAA,EAAD,UACE,cAACrD,EAAA,EAAD,CACEO,WAAS,EACTN,OAAO,QACPI,GAAG,OACHC,MAAM,eACNgD,KAAK,OACLlD,WAAS,EACTmD,aAAchB,EACd9B,SA3De,SAACC,GAC5B8B,EAAe9B,EAAEC,OAAOH,YA6DhB,eAACgD,EAAA,EAAD,WACE,cAACzC,EAAA,EAAD,CAAQpD,QAASgF,EAAkB1B,MAAM,UAAzC,oBAGA,cAACF,EAAA,EAAD,CACEpD,QAAS,WA/DF,IAAC0C,EAEpBb,QAAQC,IAAI,cAAe8C,GAC3B/C,QAAQC,IAAI,SAAUgD,GAEtBR,EACED,EAAMyB,KAAI,SAACvG,GAAD,OACRA,EAAKmD,KAAOoC,EAAQ,CAAEpC,KAAI7C,MAAO+E,EAAajF,KAAMJ,EAAKI,MAASJ,MAGtEsC,QAAQC,IAAI,YAAauC,GACzBM,GAAa,IAuDDrB,MAAM,UAJR,0BAWN,cAACyC,EAAA,EAAD,CAAMvF,UAAWf,EAAQuG,KAAzB,SACG3B,EAAMyB,KAAI,SAACvG,GAAD,OACT,cAAC,EAAD,CACEc,SAAU,kBA3FJR,EA2FmBN,EAAKM,MA3FjB6C,EA2FwBnD,EAAKmD,GA1FpDiC,GAAa,GACbE,EAAehF,QAEfkF,EAASrC,GAJM,IAAC7C,EAAO6C,GA4FbzC,SAAU,kBAxGJyC,EAwGmBnD,EAAKmD,QAvGxC4B,EACED,EAAMyB,KAAI,SAACvG,GAAD,OACRA,EAAKmD,KAAOA,EAAK,CAAEA,KAAI7C,MAAON,EAAKM,MAAOF,MAAOJ,EAAKI,MAASJ,MAHpD,IAACmD,GAyGNvC,WAAY,kBAjGJuC,EAiGqBnD,EAAKmD,QAhG5C4B,EAASD,EAAMG,QAAO,SAACjF,GAAD,OAAUA,EAAKmD,KAAOA,MAD3B,IAACA,GAkGRnD,KAAMA,GACD4F,uBAKb,cAAC,EAAD,CAASvD,QAvEG,SAACrC,EAAMmD,GACrB4B,EAAS,GAAD,mBACHD,GADG,CAEN,CACE3B,GAAI2B,EAAMX,OACV7D,MAAON,EACPI,MAAM,MAGVkC,QAAQC,IAAI,gBAAiBvC,GAC7BsC,QAAQC,IAAI,iBAAkBuC,YCrGnB4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.8db67828.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\n\nconst useStyles = makeStyles((theme) => ({\n  btnGroup: {\n    display: \"flex\",\n  },\n}));\n\nconst Task = ({ task, ...props }) => {\n  const classes = useStyles();\n  // console.log(\"tasks\", task);\n  const ActionButton = () => (\n    <div>\n      {task.done ? (\n        <Tooltip title=\"Done\">\n          <IconButton aria-label=\"active\">\n            <CheckBoxIcon onClick={props.doneTask} />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"not Done\">\n          <IconButton aria-label=\"active\">\n            <CheckBoxOutlineBlankIcon onClick={props.doneTask} />\n          </IconButton>\n        </Tooltip>\n      )}\n    </div>\n  );\n\n  const DeleteButton = () => (\n    <div>\n      <Tooltip title=\"Delete\">\n        <IconButton aria-label=\"delete\" onClick={props.deleteTask}>\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n    </div>\n  );\n\n  const EditButton = () => (\n    <div>\n      <Tooltip title=\"Edit\">\n        <IconButton aria-label=\"edit\" onClick={props.editTask}>\n          <EditIcon />\n        </IconButton>\n      </Tooltip>\n    </div>\n  );\n\n  return (\n    <ListItem button className={classes.listItem}>\n      <ListItemText secondary={task.title} />\n\n      <div className={classes.btnGroup}>\n        <DeleteButton />\n        <EditButton />\n        <ActionButton />\n      </div>\n    </ListItem>\n  );\n};\n\nexport default Task;\n","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    paddingBottom: 20,\r\n  },\r\n  NewTask: {\r\n    padding: \"0 20px\",\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: 8,\r\n    justifyContent: \"space-between\",\r\n    flexWrap: \"nowrap\",\r\n  },\r\n  box: {\r\n    height: \"100%\",\r\n    paddingLeft: 20,\r\n  },\r\n}));\r\n\r\nconst NewTask = ({ ...props }) => {\r\n  const classes = useStyles();\r\n  const [task, setTask] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    if (task) {\r\n      props.addTask(task);\r\n    }\r\n    console.log(\"handleSubmit\", task);\r\n    setTask(\"\");\r\n  };\r\n\r\n  return (\r\n    <Paper square className={classes.paper}>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid\r\n          container\r\n          // spacing={0}\r\n          // direction='row'\r\n          className={classes.NewTask}\r\n        >\r\n          <Grid xs={8}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              name=\"newTask\"\r\n              required\r\n              fullWidth\r\n              id=\"newTask\"\r\n              label=\"newTask\"\r\n              autoFocus\r\n              value={task}\r\n              onChange={(e) => setTask(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Box display=\"flex\" alignItems=\"center\" className={classes.box}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                endIcon={<Icon>send</Icon>}\r\n                fullWidth\r\n                disabled={!task.length}\r\n                onClick={handleSubmit}\r\n              >\r\n                Send\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default NewTask;\r\n","import { observable, action, computed } from \"mobx\";\r\n\r\nclass Store {\r\n  @observable defaultState = [\r\n    { id: 0, title: \"React\", done: false },\r\n    { id: 1, title: \"Vue\", done: true },\r\n    { id: 2, title: \"Angular\", done: false },\r\n  ];\r\n}\r\n\r\nconst store = new Store();\r\n\r\nexport default store;\r\n","import React, { useState } from \"react\";\r\nimport Task from \"./components/Tasks\";\r\nimport NewTask from \"./components/NewTask\";\r\n\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nimport { v4 as uuid_v4 } from \"uuid\";\r\n\r\nimport store from \"./store\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n// const defaultState = [\r\n//   { id: 0, title: \"React\", done: false },\r\n//   { id: 1, title: \"Vue\", done: true },\r\n//   { id: 2, title: \"Angular\", done: false },\r\n// ];\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    paper: {\r\n      // paddingBottom: 50,\r\n      // paddingTop: 15,\r\n      height: \"auto\",\r\n    },\r\n    header: {\r\n      height: \"70px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      paddingLeft: \"16px\",\r\n      background: \"#90a4ae\",\r\n    },\r\n    badge: {\r\n      marginLeft: \"20px\",\r\n    },\r\n  })\r\n);\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [tasks, setTasks] = useState(store.defaultState);\r\n  const activeTasks = tasks.filter((task) => !task.done);\r\n  const doneTasks = tasks.filter((task) => task.done);\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n  let [editCurTask, setEditCurTask] = useState(\"\");\r\n  let [curId, setCurId] = useState();\r\n\r\n  const doneTask = (id) => {\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id ? { id, title: task.title, done: !task.done } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const editTask = (title, id) => {\r\n    setOpenModal(true);\r\n    setEditCurTask(title);\r\n\r\n    setCurId(id);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handleChangeEditTask = (e) => {\r\n    setEditCurTask(e.target.value);\r\n  };\r\n\r\n  const sendEditTask = (id) => {\r\n    // setEditCurTask(editCurTask);\r\n    console.log(\"editCurTask\", editCurTask);\r\n    console.log(\"id-123\", curId);\r\n\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === curId ? { id, title: editCurTask, done: task.done } : task\r\n      )\r\n    );\r\n    console.log(\"tasks-new\", tasks);\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const addTask = (task, id) => {\r\n    setTasks([\r\n      ...tasks,\r\n      {\r\n        id: tasks.length,\r\n        title: task,\r\n        done: false,\r\n      },\r\n    ]);\r\n    console.log(\"addTask--task\", task);\r\n    console.log(\"addTask--tasks\", tasks);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Paper square className={classes.paper}>\r\n        <Paper className={classes.header}>\r\n          {console.log(\"store\", store.defaultState)}\r\n          {console.log(\"uuid_v4()\", uuid_v4())}\r\n          Active Tasks:\r\n          <Badge\r\n            badgeContent={activeTasks.length}\r\n            color=\"primary\"\r\n            className={classes.badge}\r\n          ></Badge>\r\n        </Paper>\r\n        <div>\r\n          <Dialog\r\n            open={openModal}\r\n            onClose={handleCloseModal}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogContent>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"edit message\"\r\n                type=\"text\"\r\n                fullWidth\r\n                defaultValue={editCurTask}\r\n                onChange={handleChangeEditTask}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseModal} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  sendEditTask();\r\n                }}\r\n                color=\"primary\"\r\n              >\r\n                Send\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n        <List className={classes.list}>\r\n          {tasks.map((task) => (\r\n            <Task\r\n              editTask={() => editTask(task.title, task.id)}\r\n              doneTask={() => doneTask(task.id)}\r\n              deleteTask={() => deleteTask(task.id)}\r\n              task={task}\r\n              key={uuid_v4()}\r\n            ></Task>\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n      <NewTask addTask={addTask}></NewTask>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}